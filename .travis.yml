language: python

matrix:
    include:
        - os: linux
          language: python
          python: 3.6
          env: PYTHONVER=3.6

        - os: linux
          language: python
          python: 3.7
          env: PYTHONVER=3.7

        - os: linux
          language: python
          python: 3.8
          env: PYTHONVER=3.8

        - os: osx
          language: generic
          python: 3.6
          env: PYTHONVER=3.6

        - os: osx
          language: generic
          python: 3.7
          env: PYTHONVER=3.7

        - os: osx
          language: generic
          python: 3.8
          env: PYTHONVER=3.8

install:
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      else
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi;
      echo "DONE"
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - conda config --set show_channel_urls true
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q --all
    - conda create -n test python=$PYTHONVER
    - source activate test
    - conda update -q --all
    - conda install -q numba>=0.50
    - conda install -q -c conda-forge numpy>=1.0 pandas>=1.0 networkx>=2.0 matplotlib>=3.0 pytest>=5.0 seaborn>=0.10 sympy>=1.5 pytables>=3.6 PyYAML>=5.3
    - conda install -q -c conda-forge coveralls coverage pytest pytest-cov
    - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $PYTHONVER == 3.8 ]]; then
          conda install -q -c conda-forge sphinx sphinx_rtd_theme ply pandoc pypandoc nbsphinx ipython;
          conda install -q conda-build conda-verify anaconda-client;
          pip install travis-sphinx codacy-coverage;
      fi
    - python setup.py install

script:
    - export PYTHONDONTWRITEBYTECODE=1
    - pytest --doctest-modules -v --cov coveralls --cov-report term-missing
    - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $PYTHONVER == 3.8 ]]; then
          coverage run --source=exa setup.py test;
          rm -rf docs/source/*.txt;
          SPHINX_APIDOC_OPTIONS=members,undoc-members,show-inheritance sphinx-apidoc -eM -s txt -o docs/source/ exa *test*;
          travis-sphinx build;
    fi

after_success:
    - coveralls
    - bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Python -r report1.xml
    - bash <(curl -Ls https://coverage.codacy.com/get.sh) final
    - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $PYTHONVER == 3.8 ]]; then
          travis-sphinx deploy;
      fi
    - if [[ $TRAVIS_BRANCH == "master" ]]; then
          echo "publishing exa";
          export ver=`cat version.txt`;
          git tag $ver;
          git push --tags;
          sed -i "s/version = .* /version = \"$ver\"/" meta.yaml;
          printf "[distutils]\nindex-servers =\n    pypi\n    testpypi\n\n[pypi]\nrepository = https://upload.pypi.org/legacy/\nusername = __token__\npassword = $pypi\n\n[testpypi]\nrepository = https://test.pypi.org/legacy/\nusername = __token__\npassword = $testpypi" > $HOME/.pypirc;
      fi
#          python setup.py sdist bdist_wheel;
#          python -m twine upload --repository pypi dist/*;
#          rm -r dist/*;
#          anaconda login --username $anaconda_username --password $anaconda_password;
#          conda build . --output;
#          conda convert -f --platform all $HOME/miniconda/conda-bld/linux-64/exa-${ver/v/}-0.tar.bz2 -o dist/;
#          for i in $(ls -d dist/); do anaconda upload $i/*; done;
#      fi
